name: SPAN_SRx4_B6N2W12O3_scratch
model_type: SRModel
scale: 4
num_gpu: auto
manual_seed: 0

# dataset and data loader settings
datasets:
  train:
    name: DIV2K
    type: PairedImageDataset
    dataroot_gt: ~/DIV2K/DIV2K_train_HR
    dataroot_lq: ~/DIV2K/DIV2K_train_LR_bicubic/X4
    filename_tmpl: '{}x4'
    # meta_info_file: /home/zhenyu/code/BasicSR/basicsr/data/meta_info/meta_info_DIV2K800sub_GT.txt
    io_backend:
      type: disk
    gt_size: 264
    use_hflip: true
    use_rot: true

    use_shuffle: true
    num_worker_per_gpu: 8
    batch_size_per_gpu: 16
    dataset_enlarge_ratio: 64
    prefetch_mode: cpu
    num_prefetch_queue: 1
  
  val_Set5:
    name: Set5
    type: PairedImageDataset
    dataroot_gt: ~/Benchmark/HR/Set5/x4
    dataroot_lq: ~/Benchmark/LRBI/Set5/x4
    filename_tmpl: '{}_LRBI_x4'
    io_backend:
      type: disk

  val_Set14:
    name: Set14
    type: PairedImageDataset
    dataroot_gt: ~/Benchmark/HR/Set14/x4
    dataroot_lq: ~/Benchmark/LRBI/Set14/x4
    filename_tmpl: '{}_LRBI_x4'
    io_backend:
      type: disk

  val_BSD100:
    name: BSD100
    type: PairedImageDataset
    dataroot_gt: ~/Benchmark/HR/B100/x4
    dataroot_lq: ~/Benchmark/LRBI/B100/x4
    filename_tmpl: '{}_LRBI_x4'
    io_backend:
      type: disk
  
  val_Urban100:
    name: Urban100
    type: PairedImageDataset
    dataroot_gt: ~/Benchmark/HR/Urban100/x4
    dataroot_lq: ~/Benchmark/LRBI/Urban100/x4
    filename_tmpl: '{}_LRBI_x4'
    io_backend:
      type: disk

  val_Manga109:
    name: Manga109
    type: PairedImageDataset
    dataroot_gt: ~/Benchmark/HR/Manga109/x4
    dataroot_lq: ~/Benchmark/LRBI/Manga109/x4
    filename_tmpl: '{}_LRBI_x4'
    io_backend:
      type: disk

# network structures
network_g:
  type: SPAN
  upscale: 4
  in_chans: 3
  img_size: 66
  window_size: 12
  overlap_size: 3
  padding_size: 0
  img_range: 1.
  depths: [2, 2, 2, 2, 2, 2]
  embed_dim: 60
  num_heads: [6, 6, 6, 6, 6, 6]
  mlp_ratio: 2
  upsampler: 'pixelshuffledirect'
  resi_connection: '1conv'

# pretrain path
path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: ~

# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: Adam
    lr: !!float 5e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [400000, 550000, 575000, 600000]
    gamma: 0.5

  total_iter: 600000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean

# validation settings
val:
  val_freq: !!float 1e4
  save_img: false

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 4
      test_y_channel: true
    ssim:
      type: calculate_ssim
      crop_border: 4
      test_y_channel: true

# logging settings
logger:
  print_freq: 200
  save_checkpoint_freq: !!float 1e4
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 28500
